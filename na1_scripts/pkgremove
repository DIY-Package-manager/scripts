#!/bin/sh
#=========================HEADER===============================|
#AUTOR:
# Jefferson Rocha <root@slackjeff.com.br>
#
#VERSÃO:
# 0.1
#
#DESCRIÇÃO:
#removepkg - Remove pacote e hierarquia do sistema operacional.
#==============================================================|
# Erros? pare.
set -e

#==========================| FUNÇÕES
REMOVE()
{
   local pkg_remove="$1"

   # Deletando arquivos.
   while read the_file; do
      rm $the_file 2>/dev/null && echo " Delete: $the_file"
   done < "$pkg_remove"

   # Removendo links simbólicos se existir..
   while read the_link; do
      unlink $the_link &>/dev/null && echo "Delete Links: $the_link"
   done < "$pkg_remove"

   # Removendo diretórios nulos
   while read the_dir; do
      rm -d $the_dir &>/dev/null && echo "Delete empty directories: $the_dir"
   done < "$pkg_remove"

   echo "Deletando track ${pkg_remove}"
   [ -e "${pkg_remove}" ] && rm -v ${pkg_remove}
}


#==========================| INICIO
case $1 in
   -r|--remove|remove)
      shift # Rebaixando um parâmetro posicional.

      # O usuário passou o nome de algum pacote?
      [ -z "$1" ] && { echo "Você deve fornecer o nome do pacote."; exit 1 ;}

      # Entrando no diretório /var lalala
      cd /var/log/installed

      # Fazendo a listagem do diretório /var/log/installed e
      # conferindo se o pacote está instalado no sistema.
      for pack_exist in *; do
         if ! [ "$(grep "$1" < ${pack_exist})" ]; then
            echo "O pacote $1 não está instalado no sistema."
            exit 1
         else
            pkg_for_remove="$pack_exist"
            break
         fi
      done

      # Chamando a função REMOVE e passando como parâmetro o nome do pacote.
      REMOVE "$pkg_for_remove"
   ;;
esac
